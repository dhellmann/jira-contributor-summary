[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "jira-contributor-summary"
dynamic = ["version"]
description = "Generate HTML summaries of JIRA ticket contributors"
readme = "README.md"
license = "MIT"
requires-python = ">=3.8"
authors = [{ name = "JIRA Contributor Summary", email = "example@example.com" }]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
dependencies = [
    "click>=8.0.0",
    "requests>=2.25.0",
    "appdirs>=1.4.0",
    "jinja2>=3.0.0",
]

[project.optional-dependencies]
dev = ["pytest>=6.0.0", "pytest-cov>=2.10.0", "ruff>=0.1.0"]

[project.scripts]
jira-contributor-summary = "jira_contributor_summary.cli:main"

[tool.hatch.version]
path = "src/jira_contributor_summary/__init__.py"

[tool.hatch.build.targets.wheel]
packages = ["src/jira_contributor_summary"]

[tool.hatch.envs.default]
dependencies = ["pytest", "pytest-cov", "ruff"]

[tool.hatch.envs.default.scripts]
test = "pytest {args:tests}"
test-cov = "pytest --cov-report=term-missing --cov-config=pyproject.toml --cov=jira_contributor_summary --cov=tests {args}"
lint = "ruff check {args:.}"
format = "ruff format {args:.}"
check = ["lint", "test"]

[tool.ruff]
target-version = "py38"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501", # line too long, handled by black
    "B008", # do not perform function calls in argument defaults
    "C901", # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q"
testpaths = ["tests"]

[tool.coverage.run]
source_pkgs = ["jira_contributor_summary", "tests"]
branch = true
parallel = true
omit = ["src/jira_contributor_summary/__about__.py"]

[tool.coverage.paths]
jira_contributor_summary = [
    "src/jira_contributor_summary",
    "*/jira-contributor-summary/src/jira_contributor_summary",
]
tests = ["tests", "*/jira-contributor-summary/tests"]

[tool.coverage.report]
exclude_lines = ["no cov", "if __name__ == .__main__.:", "if TYPE_CHECKING:"]
